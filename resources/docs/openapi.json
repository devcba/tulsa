{
  "openapi": "3.0.3",
  "info": {
    "title": "Tulsa API",
    "description": "Documentación interactiva para las APIs disponibles en el proyecto Tulsa.",
    "version": "1.0.0"
  },
  "servers": [],
  "tags": [
    {
      "name": "Usuario",
      "description": "Operaciones relacionadas con el usuario autenticado"
    },
    {
      "name": "Usuarios",
      "description": "Administración de usuarios"
    }
  ],
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "Usuario"
        ],
        "summary": "Obtener el usuario autenticado",
        "description": "Devuelve la información del usuario autenticado usando Sanctum.",
        "operationId": "getAuthenticatedUser",
        "security": [
          {
            "sanctum": []
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario obtenido correctamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResource"
                }
              }
            }
          },
          "401": {
            "description": "No autenticado"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Listar usuarios",
        "description": "Recupera el listado completo de usuarios registrados.",
        "operationId": "listUsers",
        "security": [
          {
            "sanctum": []
          }
        ],
        "responses": {
          "200": {
            "description": "Listado de usuarios obtenido correctamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCollection"
                }
              }
            }
          },
          "401": {
            "description": "No autenticado"
          }
        }
      },
      "post": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Crear un usuario",
        "description": "Crea un nuevo usuario con los datos proporcionados.",
        "operationId": "createUser",
        "security": [
          {
            "sanctum": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuario creado correctamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResource"
                }
              }
            }
          },
          "401": {
            "description": "No autenticado"
          },
          "422": {
            "description": "Error de validación",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Mostrar un usuario",
        "description": "Recupera la información detallada de un usuario específico.",
        "operationId": "showUser",
        "security": [
          {
            "sanctum": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario obtenido correctamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResource"
                }
              }
            }
          },
          "401": {
            "description": "No autenticado"
          },
          "404": {
            "description": "Usuario no encontrado"
          }
        }
      },
      "put": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Actualizar un usuario",
        "description": "Actualiza los datos de un usuario existente.",
        "operationId": "updateUser",
        "security": [
          {
            "sanctum": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuario actualizado correctamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResource"
                }
              }
            }
          },
          "401": {
            "description": "No autenticado"
          },
          "404": {
            "description": "Usuario no encontrado"
          },
          "422": {
            "description": "Error de validación",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Actualizar un usuario",
        "description": "Actualiza parcialmente los datos de un usuario existente.",
        "operationId": "patchUser",
        "security": [
          {
            "sanctum": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuario actualizado correctamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResource"
                }
              }
            }
          },
          "401": {
            "description": "No autenticado"
          },
          "404": {
            "description": "Usuario no encontrado"
          },
          "422": {
            "description": "Error de validación",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Eliminar un usuario",
        "description": "Elimina un usuario específico.",
        "operationId": "deleteUser",
        "security": [
          {
            "sanctum": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "204": {
            "description": "Usuario eliminado correctamente."
          },
          "401": {
            "description": "No autenticado"
          },
          "404": {
            "description": "Usuario no encontrado"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "UserId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Identificador único del usuario",
        "schema": {
          "type": "integer",
          "minimum": 1
        }
      }
    },
    "securitySchemes": {
      "sanctum": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "Token"
      }
    },
    "schemas": {
      "UserResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Ada Lovelace"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "ada@example.com"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "created_at",
          "updated_at"
        ]
      },
      "UserCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "UserCreateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "example": "Ada Lovelace"
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 255,
            "example": "ada@example.com"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "example": "secret123"
          }
        },
        "required": [
          "name",
          "email",
          "password"
        ]
      },
      "UserUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "example": "Ada Lovelace"
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 255,
            "example": "ada@example.com"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "example": "secret123"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "The given data was invalid."
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "message",
          "errors"
        ]
      }
    }
  }
}
